# handlers/callbacks/tasks.py

from telegram.ext import Application, CallbackQueryHandler, ContextTypes
from telegram import Update

async def tasks_list_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    # TODO: –õ–æ–≥–∏–∫–∞ –ø–æ–∫–∞–∑–∞ –∑–∞–¥–∞—á
    await query.edit_message_text("–í–∞—à–∏ –∑–∞–¥–∞—á–∏ (—Å–ø–∏—Å–æ–∫, –∫–Ω–æ–ø–∫–∏-—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è):")

async def task_complete_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    # TODO: –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ ID
    await query.answer("–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! üéâ", show_alert=True)

async def task_edit_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    # TODO: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
    await query.answer()
    await query.edit_message_text("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏...")

async def task_delete_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    # TODO: –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
    await query.answer("–ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞.", show_alert=True)

async def subtask_add_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    # TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∑–∞–¥–∞—á—É
    await query.answer()
    await query.edit_message_text("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏...")

def register_tasks_callbacks(application: Application):
    application.add_handler(CallbackQueryHandler(tasks_list_callback, pattern="^tasks_list$"))
    application.add_handler(CallbackQueryHandler(task_complete_callback, pattern="^task_complete:"))
    application.add_handler(CallbackQueryHandler(task_edit_callback, pattern="^task_edit:"))
    application.add_handler(CallbackQueryHandler(task_delete_callback, pattern="^task_delete:"))
    application.add_handler(CallbackQueryHandler(subtask_add_callback, pattern="^subtask_add:"))
