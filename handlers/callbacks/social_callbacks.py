# ==========================================
# handlers/callbacks/social_callbacks.py
# ==========================================

"""
Social features callback handlers
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–ª–ª–±–µ–∫–æ–≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

from aiogram import types
from aiogram.types import CallbackQuery

from ..utils import log_action, update_user_activity, get_user_data, add_xp
from services.social_service import SocialService
from ui.keyboards import get_main_menu_keyboard, get_friends_keyboard
from ui.messages import format_success_message
from ui.themes import get_user_theme

async def handle_friend_accept(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤ –¥—Ä—É–∑—å—è
    –§–æ—Ä–º–∞—Ç callback: accept_friend_{friend_id}
    """
    user_id = callback.from_user.id
    friend_id = callback.data.split('_', 2)[2]
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    await update_user_activity(user_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    await log_action(user_id, "friend_accept", {"friend_id": friend_id})
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    theme = await get_user_theme(user_id)
    
    # –ü—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞–ø—Ä–æ—Å
    social_service = SocialService()
    result = await social_service.accept_friend_request(user_id, friend_id)
    
    if result['success']:
        # –î–æ–±–∞–≤–ª—è–µ–º XP –∑–∞ –Ω–æ–≤—É—é –¥—Ä—É–∂–±—É
        xp_result = await add_xp(user_id, 15)
        
        success_text = format_success_message(
            f"üë• <b>–ù–æ–≤—ã–π –¥—Ä—É–≥ –¥–æ–±–∞–≤–ª–µ–Ω!</b>\n\n"
            f"–¢–µ–ø–µ—Ä—å –≤—ã –¥—Ä—É–∑—å—è —Å {result['friend_name']}\n\n"
            f"‚ö° +15 XP –∑–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π"
        )
        
        if xp_result['level_up']:
            success_text += f"\n\nüéâ –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: {xp_result['new_level']}"
        
        await callback.answer("‚úÖ –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç", show_alert=False)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π
        friends = await social_service.get_friends(user_id)
        pending_requests = await social_service.get_pending_requests(user_id)
        
        friends_text = f"{theme.get('friends_emoji', 'üë•')} <b>–°–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω</b>\n\n"
        
        if friends:
            for i, friend in enumerate(friends[-3:], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 3
                status = "üü¢" if friend.get('online') else "‚ö´"
                friends_text += f"{i}. {status} <b>{friend['name']}</b>\n"
                friends_text += f"   üìä –£—Ä–æ–≤–µ–Ω—å: {friend.get('level', 1)}\n\n"
        
        friends_text += f"<b>üìà –í—Å–µ–≥–æ –¥—Ä—É–∑–µ–π:</b> {len(friends)}"
        
        try:
            await callback.message.edit_text(
                friends_text,
                reply_markup=get_friends_keyboard(friends, pending_requests, theme),
                parse_mode="HTML"
            )
        except Exception:
            pass
    
    else:
        await callback.answer(
            f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å: {result['error']}", 
            show_alert=True
        )

async def handle_friend_decline(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤ –¥—Ä—É–∑—å—è
    –§–æ—Ä–º–∞—Ç callback: decline_friend_{friend_id}
    """
    user_id = callback.from_user.id
    friend_id = callback.data.split('_', 2)[2]
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    await update_user_activity(user_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    await log_action(user_id, "friend_decline", {"friend_id": friend_id})
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    theme = await get_user_theme(user_id)
    
    # –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    social_service = SocialService()
    result = await social_service.decline_friend_request(user_id, friend_id)
    
    if result['success']:
        await callback.answer("‚ùå –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω", show_alert=False)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
        friends = await social_service.get_friends(user_id)
        pending_requests = await social_service.get_pending_requests(user_id)
        
        try:
            await callback.message.edit_reply_markup(
                reply_markup=get_friends_keyboard(friends, pending_requests, theme)
            )
        except Exception:
            pass
    
    else:
        await callback.answer(
            f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: {result['error']}", 
            show_alert=True
        )

async def handle_view_friend_stats(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥—Ä—É–≥–∞
    –§–æ—Ä–º–∞—Ç callback: friend_stats_{friend_id}
    """
    user_id = callback.from_user.id
    friend_id = callback.data.split('_', 2)[2]
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    await update_user_activity(user_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    await log_action(user_id, "view_friend_stats", {"friend_id": friend_id})
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    theme = await get_user_theme(user_id)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥—Ä—É–≥–∞
    social_service = SocialService()
    friend_stats = await social_service.get_friend_stats(user_id, friend_id)
    
    if not friend_stats:
        await callback.answer("‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞", show_alert=True)
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats_text = f"{theme.get('stats_emoji', 'üìä')} <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—Ä—É–≥–∞</b>\n\n"
    stats_text += f"üë§ <b>{friend_stats['name']}</b>\n\n"
    
    # –£—Ä–æ–≤–µ–Ω—å –∏ XP
    level = friend_stats.get('level', 1)
    xp = friend_stats.get('xp', 0)
    
    level_names = [
        "üå± –ù–æ–≤–∏—á–æ–∫", "üåø –£—á–µ–Ω–∏–∫", "üçÉ –ü—Ä–∞–∫—Ç–∏–∫–∞–Ω—Ç", "üå≥ –≠–Ω—Ç—É–∑–∏–∞—Å—Ç",
        "üéØ –¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π", "‚≠ê –ó–≤–µ–∑–¥–∞", "üöÄ –†–∞–∫–µ—Ç–∞", "üíé –ê–ª–º–∞–∑",
        "üëë –ö–æ—Ä–æ–ª—å", "ü¶Ö –û—Ä–µ–ª", "üî• –û–≥–æ–Ω—å", "‚ö° –ú–æ–ª–Ω–∏—è",
        "üåü –°—É–ø–µ—Ä–Ω–æ–≤–∞", "üèÜ –ß–µ–º–ø–∏–æ–Ω", "üéñÔ∏è –õ–µ–≥–µ–Ω–¥–∞", "üëπ –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"
    ]
    
    level_name = level_names[min(level - 1, len(level_names) - 1)]
    
    stats_text += f"<b>{level_name}</b> (—É—Ä–æ–≤–µ–Ω—å {level})\n"
    stats_text += f"‚ö° XP: {xp}\n"
    stats_text += f"üî• –°–µ—Ä–∏—è: {friend_stats.get('streak', 0)} –¥–Ω–µ–π\n\n"
    
    # –ó–∞–¥–∞—á–∏
    stats_text += f"<b>üìù –ó–∞–¥–∞—á–∏:</b>\n"
    stats_text += f"‚Ä¢ –í—Å–µ–≥–æ: {friend_stats.get('total_tasks', 0)}\n"
    stats_text += f"‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {friend_stats.get('completed_tasks', 0)}\n"
    
    completion_rate = 0
    if friend_stats.get('total_tasks', 0) > 0:
        completion_rate = (friend_stats.get('completed_tasks', 0) / friend_stats.get('total_tasks', 1)) * 100
    
    stats_text += f"‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç: {completion_rate:.1f}%\n\n"
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    achievements_count = len(friend_stats.get('achievements', []))
    stats_text += f"<b>üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b> {achievements_count}/10\n\n"
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    user_data = await get_user_data(user_id)
    user_level = user_data.get('level', 1)
    user_xp = user_data.get('xp', 0)
    
    stats_text += f"<b>‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –≤–∞–º–∏:</b>\n"
    
    if level > user_level:
        stats_text += f"üî∫ –ù–∞ {level - user_level} —É—Ä–æ–≤–Ω–µ–π –≤—ã—à–µ\n"
    elif level < user_level:
        stats_text += f"üîª –ù–∞ {user_level - level} —É—Ä–æ–≤–Ω–µ–π –Ω–∏–∂–µ\n"
    else:
        stats_text += f"üü∞ –û–¥–∏–Ω–∞–∫–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å\n"
    
    xp_diff = xp - user_xp
    if xp_diff > 0:
        stats_text += f"‚ö° –ù–∞ {xp_diff} XP –±–æ–ª—å—à–µ\n"
    elif xp_diff < 0:
        stats_text += f"‚ö° –ù–∞ {abs(xp_diff)} XP –º–µ–Ω—å—à–µ\n"
    else:
        stats_text += f"‚ö° –û–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ XP\n"
    
    from ui.keyboards import get_friend_stats_keyboard
    
    try:
        await callback.message.edit_text(
            stats_text,
            reply_markup=get_friend_stats_keyboard(friend_id, theme),
            parse_mode="HTML"
        )
    except Exception:
        await callback.message.answer(
            stats_text,
            reply_markup=get_friend_stats_keyboard(friend_id, theme),
            parse_mode="HTML"
        )
    
    await callback.answer()

async def handle_send_motivation(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –¥—Ä—É–∑—å—è–º
    –§–æ—Ä–º–∞—Ç callback: send_motivation_{friend_id}
    """
    user_id = callback.from_user.id
    friend_id = callback.data.split('_', 2)[2]
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    await update_user_activity(user_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    await log_action(user_id, "send_motivation", {"friend_id": friend_id})
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏—é
    social_service = SocialService()
    result = await social_service.send_motivation_to_friend(user_id, friend_id)
    
    if result['success']:
        await callback.answer(
            f"üí™ –ú–æ—Ç–∏–≤–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ {result['friend_name']}!", 
            show_alert=True
        )
    else:
        await callback.answer(
            f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é", 
            show_alert=True
        )

async def handle_challenge_friend(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑–æ–≤–∞ –¥—Ä—É–≥–∞ –Ω–∞ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ
    –§–æ—Ä–º–∞—Ç callback: challenge_{friend_id}
    """
    user_id = callback.from_user.id
    friend_id = callback.data.split('_', 1)[1]
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    await update_user_activity(user_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    await log_action(user_id, "challenge_friend", {"friend_id": friend_id})
    
    await callback.answer(
        "üèÅ –§—É–Ω–∫—Ü–∏—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!", 
        show_alert=True
    )
