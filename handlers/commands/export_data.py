"""
Data export commands
–ö–æ–º–∞–Ω–¥—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
"""

from aiogram import types
from aiogram.types import Message, BufferedInputFile
import json
import csv
import io

from ..utils import log_action, update_user_activity, get_user_data
from services.export_service import ExportService
from ui.keyboards import get_main_menu_keyboard
from ui.themes import get_user_theme

async def export_command(message: Message) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /export - —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"""
    user_id = message.from_user.id
    
    await update_user_activity(user_id)
    await log_action(user_id, "export_command")
    
    theme = await get_user_theme(user_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    export_service = ExportService()
    user_data = await export_service.get_user_export_data(user_id)
    
    if not user_data:
        await message.answer(
            f"‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞.",
            reply_markup=get_main_menu_keyboard(theme),
            parse_mode="HTML"
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º JSON —Ñ–∞–π–ª
    json_data = json.dumps(user_data, ensure_ascii=False, indent=2)
    json_file = BufferedInputFile(
        json_data.encode('utf-8'),
        filename=f"dailycheck_export_{user_id}.json"
    )
    
    await message.answer_document(
        json_file,
        caption=f"üìä <b>–≠–∫—Å–ø–æ—Ä—Ç –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö</b>\n\n"
               f"–§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç:\n"
               f"‚Ä¢ –í—Å–µ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏\n"
               f"‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
               f"‚Ä¢ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ —Ü–µ–ª–∏\n"
               f"‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n\n"
               f"<i>–î–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON</i>",
        reply_markup=get_main_menu_keyboard(theme),
        parse_mode="HTML"
    )
