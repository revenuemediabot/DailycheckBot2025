"""
Social features commands
–ö–æ–º–∞–Ω–¥—ã —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

from aiogram import types
from aiogram.types import Message

from ..states import state_manager, UserState
from ..utils import log_action, update_user_activity, get_user_data
from services.social_service import SocialService
from ui.keyboards import get_main_menu_keyboard, get_friends_keyboard
from ui.themes import get_user_theme

async def friends_command(message: Message) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /friends - —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π"""
    user_id = message.from_user.id
    
    await update_user_activity(user_id)
    await log_action(user_id, "friends_command")
    
    theme = await get_user_theme(user_id)
    social_service = SocialService()
    
    friends = await social_service.get_friends(user_id)
    
    friends_text = f"{theme.get('friends_emoji', 'üë•')} <b>–í–∞—à–∏ –¥—Ä—É–∑—å—è</b>\n\n"
    
    if not friends:
        friends_text += "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π.\n\n"
        friends_text += "–î–æ–±–∞–≤–ª—è–π—Ç–µ –¥—Ä—É–∑–µ–π —á—Ç–æ–±—ã:\n"
        friends_text += "‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        friends_text += "‚Ä¢ –ú–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞\n"
        friends_text += "‚Ä¢ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —á–µ–ª–ª–µ–Ω–¥–∂–∞—Ö\n\n"
        friends_text += "<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /add_friend –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è</i>"
    else:
        for friend in friends:
            status = "üü¢" if friend.get('online') else "‚ö´"
            friends_text += f"{status} <b>{friend['name']}</b>\n"
            friends_text += f"   –£—Ä–æ–≤–µ–Ω—å: {friend.get('level', 1)}\n"
            friends_text += f"   XP: {friend.get('xp', 0)}\n\n"
    
    await message.answer(
        friends_text,
        reply_markup=get_friends_keyboard(friends, theme),
        parse_mode="HTML"
    )

async def add_friend_command(message: Message) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /add_friend - –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞"""
    user_id = message.from_user.id
    
    await update_user_activity(user_id)
    await log_action(user_id, "add_friend_command")
    
    theme = await get_user_theme(user_id)
    
    command_args = message.text.split(' ', 1)
    
    if len(command_args) > 1:
        friend_input = command_args[1].strip()
        
        social_service = SocialService()
        success = await social_service.add_friend_by_input(user_id, friend_input)
        
        if success:
            await message.answer(
                f"‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
                reply_markup=get_main_menu_keyboard(theme),
                parse_mode="HTML"
            )
        else:
            await message.answer(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å.",
                reply_markup=get_main_menu_keyboard(theme),
                parse_mode="HTML"
            )
        return
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
    state_manager.set_state(user_id, UserState.ADDING_FRIEND)
    
    await message.answer(
        f"{theme.get('add_friend_emoji', '‚ûï')} <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∞</b>\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ @username:\n\n"
        f"<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel</i>",
        reply_markup=None,
        parse_mode="HTML"
    )

async def myid_command(message: Message) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /myid - —É–∑–Ω–∞—Ç—å —Å–≤–æ–π ID"""
    user_id = message.from_user.id
    
    await update_user_activity(user_id)
    await log_action(user_id, "myid_command")
    
    theme = await get_user_theme(user_id)
    
    await message.answer(
        f"{theme.get('id_emoji', 'üÜî')} <b>–í–∞—à ID</b>\n\n"
        f"<code>{user_id}</code>\n\n"
        f"–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º ID —Å –¥—Ä—É–∑—å—è–º–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –º–æ–≥–ª–∏ –≤–∞—Å –¥–æ–±–∞–≤–∏—Ç—å!",
        reply_markup=get_main_menu_keyboard(theme),
        parse_mode="HTML"
    )
