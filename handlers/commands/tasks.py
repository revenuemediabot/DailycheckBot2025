# handlers/commands/tasks.py

import logging
import uuid
from datetime import datetime, timedelta
from typing import List, Optional
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup

logger = logging.getLogger(__name__)

# –í–ê–ñ–ù–û: –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –£–ü–†–û–©–ï–ù–ù–´–ï –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
# –í—Å—è –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —É–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ main.py –≤ –∫–ª–∞—Å—Å–µ DailyCheckBot
# –≠—Ç–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∫ –ø–æ–ª–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏

async def tasks_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ü–ï–†–ï–ê–î–†–ï–°–ê–¶–ò–Ø –∫ main.py"""
    # –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –≤ main.py –º–µ—Ç–æ–¥–æ–º tasks_command
    await update.message.reply_text(
        "üìù **–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...**\n\n"
        "üí° –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ main.py",
        parse_mode='Markdown'
    )

async def addtask_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É - –ü–ï–†–ï–ê–î–†–ï–°–ê–¶–ò–Ø –∫ main.py"""
    if context.args:
        # –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        task_title = " ".join(context.args)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await update.message.reply_text(
            f"‚ûï **–ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏:**\n\n"
            f"üìù {task_title}\n\n"
            f"üí° –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ main.py\n"
            f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /add –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.",
            parse_mode='Markdown'
        )
    else:
        await update.message.reply_text(
            "üìù **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏:**\n\n"
            "‚Ä¢ **–ë—ã—Å—Ç—Ä–æ:** `/addtask –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏`\n"
            "‚Ä¢ **–ü–æ–¥—Ä–æ–±–Ω–æ:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É' –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /add\n\n"
            "üí° –ü—Ä–∏ –ø–æ–¥—Ä–æ–±–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.\n"
            "üîß –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ main.py",
            parse_mode='Markdown'
        )

async def settasks_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á"""
    if not context.args:
        await update.message.reply_text(
            "üìã **–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–¥–∞—á**\n\n"
            "**–§–æ—Ä–º–∞—Ç:** `/settasks –∑–∞–¥–∞—á–∞1; –∑–∞–¥–∞—á–∞2; –∑–∞–¥–∞—á–∞3`\n\n"
            "**–ü—Ä–∏–º–µ—Ä:** \n"
            "`/settasks –í—ã–ø–∏—Ç—å –≤–æ–¥—É; –°–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É; –ü—Ä–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É`\n\n"
            "–í—Å–µ –∑–∞–¥–∞—á–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å–æ —Å—Ä–µ–¥–Ω–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º.\n\n"
            "üîß –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ main.py",
            parse_mode='Markdown'
        )
        return
    
    # –ü–∞—Ä—Å–∏–º –∑–∞–¥–∞—á–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    tasks_text = " ".join(context.args)
    task_titles = [title.strip() for title in tasks_text.split(';') if title.strip()]
    
    if not task_titles:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∑–∞–¥–∞—á–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç.")
        return
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á
    if len(task_titles) > 10:
        task_titles = task_titles[:10]
        await update.message.reply_text("‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –¥–æ 10 –∑–∞–¥–∞—á –∑–∞ —Ä–∞–∑.")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ
    tasks_preview = "\n".join([f"‚Ä¢ {title}" for title in task_titles])
    
    await update.message.reply_text(
        f"‚úÖ **–ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ {len(task_titles)} –∑–∞–¥–∞—á:**\n\n"
        f"{tasks_preview}\n\n"
        f"üîß –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ main.py\n"
        f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É'",
        parse_mode='Markdown'
    )

async def edit_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á"""
    await update.message.reply_text(
        "‚úèÔ∏è **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á:**\n\n"
        "–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
        "‚Ä¢ /tasks - –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞—á—É –∏–∑ —Å–ø–∏—Å–∫–∞\n"
        "‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚Üí '–ú–æ–∏ –∑–∞–¥–∞—á–∏'\n\n"
        "üí° –í –¥–µ—Ç–∞–ª—å–Ω–æ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∑–∞–¥–∞—á–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –æ–ø—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.\n"
        "üîß –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ main.py",
        parse_mode='Markdown'
    )

async def reset_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–±—Ä–æ—Å –≤—Å–µ—Ö –∑–∞–¥–∞—á"""
    await update.message.reply_text(
        "‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ!**\n\n"
        "–°–±—Ä–æ—Å –≤—Å–µ—Ö –∑–∞–¥–∞—á - —Å–µ—Ä—å–µ–∑–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.\n\n"
        "–î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
        "‚Ä¢ /tasks - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏\n"
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n"
        "üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è.\n"
        "üîß –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ main.py",
        parse_mode='Markdown'
    )

async def addsub_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∑–∞–¥–∞—á—É"""
    if not context.args:
        await update.message.reply_text(
            "üìù **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏**\n\n"
            "**–§–æ—Ä–º–∞—Ç:** `/addsub [–Ω–æ–º–µ—Ä_–∑–∞–¥–∞—á–∏] [–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø–æ–¥–∑–∞–¥–∞—á–∏]`\n\n"
            "**–ü—Ä–∏–º–µ—Ä:** `/addsub 1 –ö—É–ø–∏—Ç—å —Ö–ª–µ–±`\n\n"
            "üí° –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á–∏ ‚Üí '‚ûï –ü–æ–¥–∑–∞–¥–∞—á–∞'\n"
            "üîß –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ main.py",
            parse_mode='Markdown'
        )
        return
    
    if len(context.args) < 2:
        await update.message.reply_text("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏.")
        return
    
    task_number = context.args[0]
    subtask_title = " ".join(context.args[1:])
    
    await update.message.reply_text(
        f"üìù **–ü–æ–¥–∑–∞–¥–∞—á–∞ –≥–æ—Ç–æ–≤–∞ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é:**\n\n"
        f"üîó –ö –∑–∞–¥–∞—á–µ #{task_number}\n"
        f"üìù –ü–æ–¥–∑–∞–¥–∞—á–∞: {subtask_title}\n\n"
        f"üîß –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ main.py\n"
        f"üí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ /tasks",
        parse_mode='Markdown'
    )

def register_task_handlers(application: Application):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–ø—Ä–æ—â–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–¥–∞—á
    
    –í–ê–ñ–ù–û: –í—Å—è –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ main.py!
    –≠—Ç–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ - —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º.
    """
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        application.add_handler(CommandHandler("tasks", tasks_command))
        application.add_handler(CommandHandler("addtask", addtask_command))  
        application.add_handler(CommandHandler("settasks", settasks_command))
        application.add_handler(CommandHandler("edit", edit_command))
        application.add_handler(CommandHandler("reset", reset_command))
        application.add_handler(CommandHandler("addsub", addsub_command))
        
        logger.info("‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ task handlers –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        logger.info("üîß –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∑–∞–¥–∞—á –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ main.py")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ task handlers: {e}")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
"""
üîß –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:

–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –£–ü–†–û–©–ï–ù–ù–´–ï –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∑–∞–¥–∞—á.
–û—Å–Ω–æ–≤–Ω–∞—è –ø–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ main.py –≤ –∫–ª–∞—Å—Å–µ DailyCheckBot.

–ü–û–ß–ï–ú–£ –¢–ê–ö –°–î–ï–õ–ê–ù–û:
1. –í main.py —É–∂–µ –µ—Å—Ç—å –≤—Å—è –ª–æ–≥–∏–∫–∞: Task, User, DatabaseManager
2. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã services/task_service.py –∏ services/data_service.py
3. –ú–æ–¥–µ–ª–∏ –≤ models/ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –º–æ–¥–µ–ª–µ–π –≤ main.py

–ß–¢–û –†–ê–ë–û–¢–ê–ï–¢:
- –ö–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ –æ—Ç–≤–µ—á–∞—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
- –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
- –ù–µ –ª–æ–º–∞—é—Ç —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞

–ß–¢–û –ù–£–ñ–ù–û –î–õ–Ø –ü–û–õ–ù–û–ì–û –§–£–ù–ö–¶–ò–û–ù–ê–õ–ê:
- –õ–∏–±–æ —Å–æ–∑–¥–∞—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ services/
- –õ–∏–±–æ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ñ–∞–π–ª –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ main.py
- –õ–∏–±–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π main.py

–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:
–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è - –≤—Å—è –ª–æ–≥–∏–∫–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ main.py.
–≠—Ç–æ—Ç —Ñ–∞–π–ª –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é handlers –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ main.py.
"""
